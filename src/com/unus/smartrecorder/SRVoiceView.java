
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : SRVoiceView.java
//  @ Date : 2013-05-30
//  @ Author : 
//
//
package com.unus.smartrecorder;

import android.app.AlertDialog;
import android.app.Dialog;
import android.content.Context;
import android.content.DialogInterface;
import android.database.Cursor;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ListView;
import android.widget.RelativeLayout;

public class SRVoiceView extends RelativeLayout{
    public static final int DIALOG_INPUT_BASIC_INFO = 1; // Input Basic Info Dialog
    public static final int DIALOG_INPUT_TEXT_TAG = 2; // Input Text Tag Dialog

    private Context mContext;
	private Button mBtnRecorder, mBtnStop, mBtnPlay;
    private ListView mTagListView;
    private ArrayAdapter<String> mTagListViewAdapter;
    private ImageButton mTextTagBtn, mPhotoTagBtn, mRecordBtn, mStopBtn;
    SRVoice mSRVoice;
    private SRVoiceViewListner mSRVoiceViewListner;
    
    //{{TESTCODE
    private String[] mStrings = Cheeses.sCheeseStrings;
    //}}TESTCODE

    
    public SRVoiceView(Context context) {
        super(context);
        initView(context);
    }
    
    public SRVoiceView(Context context, AttributeSet attrs) {
        super(context, attrs);
        initView(context);
    }
    
    private void initView(Context context) {
        mContext = context;
        LayoutInflater inflater = (LayoutInflater) context
                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            inflater.inflate(R.layout.sr_voiceview_layout, this, true);
            
            SRDebugUtil.SRLog("dbHandler-1");
            SRDbHandler dbHandler = SRDbHandler.open(mContext);
            SRDebugUtil.SRLog("dbHandler-2");
            long result = dbHandler.insertInfo("/test/voice.mp3", "/test/voice.pdf");
            SRDebugUtil.SRLog("insert result = " + result);
            SRDebugUtil.SRLog("dbHandler-3");
            Cursor cursor = dbHandler.selectAll();
            
            String[] personArr = new String[cursor.getCount()]; 
            
            SRDebugUtil.SRLog("personArr count = " + cursor.getCount());
            
            int count = 0;
            
            while (cursor.moveToNext()) {
				int id = cursor.getInt(0);
				String created_time = cursor.getString(1);
				String voice_path = cursor.getString(2);
				String document_path = cursor.getString(3);
				personArr[count] = id + " " + created_time + " " + voice_path + " " + document_path;
				count++;
			}
            cursor.close();
            
            SRDebugUtil.SRLog("personArr  = " + personArr);
            
            mSRVoice = new SRVoice();
            
            
            
            mBtnRecorder = (Button) findViewById(R.id.btnRecorder);
            mBtnRecorder.setOnClickListener(new OnClickListener() {
                
                @Override
                public void onClick(View v) {
                    // TODO Auto-generated method stub
                    //DebugUtil.SRLog("onClick()");
                	mSRVoice.recordStart(mContext);
                }
            });
            
            mBtnStop = (Button) findViewById(R.id.btnStop);
            mBtnStop.setOnClickListener(new OnClickListener(){
            	@Override
            	public void onClick(View v) {
            		// TODO Auto-generated method stub
            		mSRVoice.recordStop(mContext);
            	}
            });
            
            
            mBtnPlay = (Button) findViewById(R.id.btnPlay);
            mBtnPlay.setOnClickListener(new OnClickListener(){
            	@Override
            	public void onClick(View v) {
            		// TODO Auto-generated method stub
            		mSRVoice.play();
            	}
            });
            mTagListView = (ListView) findViewById(R.id.tagListView);
            mTagListView.setAdapter(mTagListViewAdapter = new ArrayAdapter<String>(

            mContext, android.R.layout.simple_list_item_1, personArr));

            
            
            mTextTagBtn = (ImageButton) findViewById(R.id.textTagBtn);
            mTextTagBtn.setOnClickListener(new OnClickListener(){
                @Override
                public void onClick(View v) {

                }
            });
            
            mPhotoTagBtn = (ImageButton) findViewById(R.id.photoTagBtn);
            mPhotoTagBtn.setOnClickListener(new OnClickListener(){
                @Override
                public void onClick(View v) {

                }
            });
            
            mRecordBtn = (ImageButton) findViewById(R.id.recordBtn);
            mRecordBtn.setOnClickListener(new OnClickListener(){
                @Override
                public void onClick(View v) {
                    SRDebugUtil.SRLog("Record Click");
                    if (mSRVoiceViewListner != null)
                        mSRVoiceViewListner.showInputBasicInfo();
                }
            });
            
            mStopBtn = (ImageButton) findViewById(R.id.stopBtn);
            mStopBtn.setOnClickListener(new OnClickListener(){
                @Override
                public void onClick(View v) {

                }
            });
    }
    
    public void setSRVoiceViewListner(SRVoiceViewListner listner) {
        mSRVoiceViewListner = listner;
    }
    
    public Dialog createDialog(Context context, int id) {
        LayoutInflater factory = (LayoutInflater) context
                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        switch(id) {
        case DIALOG_INPUT_BASIC_INFO:
            final View inputBasicInfoView = factory.inflate(
                    R.layout.sr_input_basic_info_dialog, null);
            EditText title = (EditText)inputBasicInfoView.findViewById(R.id.titleText);
            EditText doc = (EditText)inputBasicInfoView.findViewById(R.id.docText);
            return new AlertDialog.Builder(context)
                    //.setIconAttribute(android.R.attr.alertDialogIcon)
                    .setTitle(R.string.input_basic_info)
                    .setView(inputBasicInfoView)
                    .setPositiveButton(android.R.string.ok,
                            new DialogInterface.OnClickListener() {
                                public void onClick(DialogInterface dialog,
                                        int whichButton) {

                                    
                                }
                            })
                    .setNegativeButton(android.R.string.cancel,
                            new DialogInterface.OnClickListener() {
                                public void onClick(DialogInterface dialog,
                                        int whichButton) {

                                    // do nothing
                                }
                            }).create();
            
        case DIALOG_INPUT_TEXT_TAG:
            final View inputTextTagView = factory.inflate(
                    R.layout.sr_input_basic_info_dialog, null);
            return new AlertDialog.Builder(context)
                    .setIconAttribute(android.R.attr.alertDialogIcon)
                    .setTitle(R.string.input_basic_info)
                    .setView(inputTextTagView)
                    .setPositiveButton(android.R.string.ok,
                            new DialogInterface.OnClickListener() {
                                public void onClick(DialogInterface dialog,
                                        int whichButton) {

                                    /* User clicked OK so do some stuff */
                                }
                            })
                    .setNegativeButton(android.R.string.cancel,
                            new DialogInterface.OnClickListener() {
                                public void onClick(DialogInterface dialog,
                                        int whichButton) {

                                    /* User clicked cancel so do some stuff */
                                }
                            }).create();
        default:
            return null;
        }


    }
}
