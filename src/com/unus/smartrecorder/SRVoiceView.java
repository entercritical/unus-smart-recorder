
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : SRVoiceView.java
//  @ Date : 2013-05-30
//  @ Author : 
//
//
package com.unus.smartrecorder;

import java.util.List;

import android.app.AlertDialog;
import android.app.Dialog;
import android.content.Context;
import android.content.DialogInterface;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;

public class SRVoiceView extends RelativeLayout{
    public static final int DIALOG_INPUT_BASIC_INFO = 1; // Input Basic Info Dialog
    public static final int DIALOG_INPUT_TEXT_TAG = 2; // Input Text Tag Dialog

    private Context mContext;
	private Button mBtnRecorder, mBtnStop, mBtnPlay;
    private ListView mTagListView;
    private ArrayAdapter<String> mTagListViewAdapter;
    private ImageButton mTextTagBtn, mPhotoTagBtn, mRecordBtn, mStopBtn;
    private SRVoice mSRVoice;
    private SRVoiceViewListner mSRVoiceViewListner;
    
    private EditText mTitleView;    // Basic Info Dialog
    private TextView mDocPathView;  // Basic Info Dialog
    private String mTitle;         // Basic Info Dialog
    private String mDocPath;        // Basic Info Dialog
    
    //{{TESTCODE
    private String[] mStrings = Cheeses.sCheeseStrings;
    //}}TESTCODE

    
    public SRVoiceView(Context context) {
        super(context);
        initView(context);
    }
    
    public SRVoiceView(Context context, AttributeSet attrs) {
        super(context, attrs);
        initView(context);
    }
    
    /**
     * View initialization
     * 
     * @param context
     */
    private void initView(Context context) {
        mContext = context;
        LayoutInflater inflater = (LayoutInflater) context
                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            inflater.inflate(R.layout.sr_voiceview_layout, this, true);
            
            
//            SRDataSource datasource = new SRDataSource(mContext);
//            datasource.open();
////          
//            datasource.createVoice("testVoicePath", "testDocPath");
////            
//            datasource.createTag(2, 1, "good2", "00:01");
//            
//            List<SRVoiceModel> voices = datasource.getAllVoice();
//            
//            List<SRTagModel> tags = datasource.getTagByVoiceId((long) 2);
//            SRDebugUtil.SRLog("voices = "+voices);
//            SRDebugUtil.SRLog("tags = "+tags);
            
            
            mSRVoice = new SRVoice();

            //{{TESTCODE
            mBtnRecorder = (Button) findViewById(R.id.btnRecorder);
            mBtnRecorder.setOnClickListener(new OnClickListener() {
                
                @Override
                public void onClick(View v) {
                    // TODO Auto-generated method stub
                    //DebugUtil.SRLog("onClick()");
                	mSRVoice.recordStart(mContext);
                }
            });
            
            mBtnStop = (Button) findViewById(R.id.btnStop);
            mBtnStop.setOnClickListener(new OnClickListener(){
            	@Override
            	public void onClick(View v) {
            		// TODO Auto-generated method stub
            		mSRVoice.recordStop(mContext);
            	}
            });
            
            
            mBtnPlay = (Button) findViewById(R.id.btnPlay);
            mBtnPlay.setOnClickListener(new OnClickListener(){
            	@Override
            	public void onClick(View v) {
            		// TODO Auto-generated method stub
            		mSRVoice.play();
            	}
            });
            mTagListView = (ListView) findViewById(R.id.tagListView);
            mTagListView.setAdapter(mTagListViewAdapter = new ArrayAdapter<String>(

            mContext, android.R.layout.simple_list_item_1, Cheeses.sCheeseStrings));
            //{{TESTCODE
            
            
            mTextTagBtn = (ImageButton) findViewById(R.id.textTagBtn);
            mTextTagBtn.setOnClickListener(new OnClickListener(){
                @Override
                public void onClick(View v) {
                    SRDebugUtil.SRLog("TextTag Click");
                    if (mSRVoiceViewListner != null)
                        mSRVoiceViewListner.showInputBasicInfo();
                }
            });
            
            mPhotoTagBtn = (ImageButton) findViewById(R.id.photoTagBtn);
            mPhotoTagBtn.setOnClickListener(new OnClickListener(){
                @Override
                public void onClick(View v) {
                    SRDebugUtil.SRLog("PhotoTag Click");
                }
            });
            
            mRecordBtn = (ImageButton) findViewById(R.id.recordBtn);
            mRecordBtn.setOnClickListener(new OnClickListener(){
                @Override
                public void onClick(View v) {
                    SRDebugUtil.SRLog("Record Click");
                    if (mSRVoiceViewListner != null)
                        mSRVoiceViewListner.showInputBasicInfo();
                }
            });
            
            mStopBtn = (ImageButton) findViewById(R.id.stopBtn);
            mStopBtn.setOnClickListener(new OnClickListener(){
                @Override
                public void onClick(View v) {
                    SRDebugUtil.SRLog("Stop Click");
                    
                    if (mSRVoice != null)
                        mSRVoice.recordStop(mContext);
                }
            });
    }
    
    /**
     * Activity Callback을 호출해주기 위해 리스너를 등록해준다.
     * 
     * @param listner
     */
    public void setSRVoiceViewListner(SRVoiceViewListner listner) {
        mSRVoiceViewListner = listner;
    }
    
    /**
     * 파일 탐색기 선택한 PDF 파일의 경로를 설정해준다.
     * 
     * @param path
     */
    public void setDocPath(String path) {
        mDocPath = path;
        if (mDocPathView != null)
            mDocPathView.setText(mDocPath);
    }
    
    /**
     * Input Basic Info, Input Text Tag Dialog 생성한다
     * 
     * @param context
     * @param id
     * @return 생성된 Dialog
     */
    public Dialog createDialog(Context context, int id) {
        LayoutInflater factory = (LayoutInflater) context
                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        switch(id) {
        case DIALOG_INPUT_BASIC_INFO:
            final View inputBasicInfoView = factory.inflate(
                    R.layout.sr_input_basic_info_dialog, null);
            mTitleView = (EditText)inputBasicInfoView.findViewById(R.id.titleText);
            mDocPathView = (TextView)inputBasicInfoView.findViewById(R.id.docPathText);
            mDocPathView.setSelected(true);
            final ImageButton explorerBtn = (ImageButton)inputBasicInfoView.findViewById(R.id.explorerBtn);
            explorerBtn.setOnClickListener(new OnClickListener() {
                
                @Override
                public void onClick(View v) {
                    if (mSRVoiceViewListner != null) 
                        mSRVoiceViewListner.showFileExplorer();
                }
            });
            
            return new AlertDialog.Builder(context)
                    .setTitle(R.string.input_basic_info)
                    .setView(inputBasicInfoView)
                    .setPositiveButton(android.R.string.ok,
                            new DialogInterface.OnClickListener() {
                                public void onClick(DialogInterface dialog,
                                        int whichButton) {
                                    mTitle = mTitleView.getText().toString();
                                    
                                    SRDebugUtil.SRLog("Input Basic Info : Title : " + mTitle + " Doc : " + mDocPath);
                                    
                                    // Set Basic Info & Recording start
                                    mSRVoice.setBasicInfo(mTitle, mDocPath);
                                    mSRVoice.recordStart(mContext);
                                }
                            })
                    .setNegativeButton(android.R.string.cancel,
                            new DialogInterface.OnClickListener() {
                                public void onClick(DialogInterface dialog,
                                        int whichButton) {
                                    mTitle = "";
                                    mDocPath = "";
                                }
                            }).create();
            
        case DIALOG_INPUT_TEXT_TAG:
            final View inputTextTagView = factory.inflate(
                    R.layout.sr_input_basic_info_dialog, null);
            return new AlertDialog.Builder(context)
                    .setTitle(R.string.input_basic_info)
                    .setView(inputTextTagView)
                    .setPositiveButton(android.R.string.ok,
                            new DialogInterface.OnClickListener() {
                                public void onClick(DialogInterface dialog,
                                        int whichButton) {

                                    /* User clicked OK so do some stuff */
                                }
                            })
                    .setNegativeButton(android.R.string.cancel,
                            new DialogInterface.OnClickListener() {
                                public void onClick(DialogInterface dialog,
                                        int whichButton) {

                                    /* User clicked cancel so do some stuff */
                                }
                            }).create();
        default:
            return null;
        }
    }
    
    private Runnable mShowImeRunnable = new Runnable() {
        public void run() {
            InputMethodManager imm = (InputMethodManager)
                    getContext().getSystemService(Context.INPUT_METHOD_SERVICE);

            if (imm != null) {
                imm.showSoftInput(mTitleView, InputMethodManager.SHOW_IMPLICIT);
            }
        }
    };
    
    /**
     * showDialog()가 호출될 때마다 호출된다.
     * Dialog에서 사용하는 view, string등을 초기화 해준다. 
     * 
     * @param context
     * @param id
     */
    public void prepareDialog(Context context, int id) {
        switch(id) {
        case DIALOG_INPUT_BASIC_INFO:
            mTitleView.setText(mSRVoice.makeDefaultTitle());
            mTitleView.selectAll();
            mTitleView.requestFocus();
            mTitleView.post(mShowImeRunnable);

            mDocPathView.setText("");
            break;
            
        case DIALOG_INPUT_TEXT_TAG:
            break;

        default:
            break;
        }
    }
}
